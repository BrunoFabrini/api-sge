// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api_sge.Database;

namespace api_sge.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("api_sge.Entidades.Endereco", b =>
                {
                    b.Property<long>("EnderecoCodigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogradouroNumero")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EnderecoCodigo");

                    b.ToTable("Enderecos");

                    b.HasData(
                        new
                        {
                            EnderecoCodigo = 1L,
                            Cidade = "Belo Horizonte",
                            Estado = "MG",
                            Logradouro = "Rua XPTO",
                            LogradouroNumero = "1000"
                        });
                });

            modelBuilder.Entity("api_sge.Entidades.Entrega", b =>
                {
                    b.Property<long>("EntregaCodigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AlteradoDataHora")
                        .HasColumnType("datetime2");

                    b.Property<long>("AlteradoUsuarioCodigo")
                        .HasColumnType("bigint");

                    b.Property<double>("Frete")
                        .HasColumnType("float");

                    b.Property<DateTime>("IncluidoDataHora")
                        .HasColumnType("datetime2");

                    b.Property<long>("IncluidoUsuarioCodigo")
                        .HasColumnType("bigint");

                    b.Property<long?>("MercadoriaCodigo")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("EntregaCodigo");

                    b.HasIndex("MercadoriaCodigo");

                    b.ToTable("Entregas");
                });

            modelBuilder.Entity("api_sge.Entidades.Localizacao", b =>
                {
                    b.Property<long>("LocalizacaoCodigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("ChegadaDataHora")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EnderecoCodigo")
                        .HasColumnType("bigint");

                    b.Property<long?>("EntregaCodigo")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("IncluidoDataHora")
                        .HasColumnType("datetime2");

                    b.Property<long>("IncluidoUsuarioCodigo")
                        .HasColumnType("bigint");

                    b.HasKey("LocalizacaoCodigo");

                    b.HasIndex("EnderecoCodigo");

                    b.HasIndex("EntregaCodigo");

                    b.ToTable("Localizacoes");
                });

            modelBuilder.Entity("api_sge.Entidades.Mercadoria", b =>
                {
                    b.Property<long>("MercadoriaCodigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AlteradoDataHora")
                        .HasColumnType("datetime2");

                    b.Property<long>("AlteradoUsuarioCodigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IncluidoDataHora")
                        .HasColumnType("datetime2");

                    b.Property<long>("IncluidoUsuarioCodigo")
                        .HasColumnType("bigint");

                    b.Property<int>("QuantidadeEstoque")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("MercadoriaCodigo");

                    b.ToTable("Mercadorias");
                });

            modelBuilder.Entity("api_sge.Entidades.Usuario", b =>
                {
                    b.Property<long>("UsuarioCodigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("Admin")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("SenhaHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("SenhaSalt")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("UsuarioCodigo");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioCodigo = 1L,
                            Admin = true,
                            Login = "admin",
                            SenhaHash = new byte[] { 161, 45, 193, 209, 131, 202, 63, 63, 76, 153, 222, 130, 26, 26, 179, 201, 244, 239, 205, 18, 210, 189, 89, 36, 56, 52, 85, 222, 127, 160, 28, 224, 201, 134, 245, 129, 217, 113, 78, 131, 76, 169, 6, 231, 99, 199, 53, 130, 20, 248, 51, 193, 102, 220, 101, 33, 207, 231, 148, 233, 151, 139, 248, 130 },
                            SenhaSalt = new byte[] { 27, 36, 16, 0, 156, 60, 33, 248, 155, 233, 19, 71, 49, 55, 114, 93, 215, 246, 96, 38, 74, 63, 43, 5, 36, 235, 95, 110, 139, 201, 243, 145, 135, 38, 122, 183, 252, 59, 56, 235, 65, 151, 55, 168, 119, 23, 199, 143, 21, 152, 248, 12, 179, 11, 184, 67, 36, 96, 246, 88, 29, 75, 85, 238, 15, 99, 55, 27, 25, 34, 189, 183, 208, 111, 165, 100, 114, 93, 254, 185, 192, 173, 15, 224, 89, 29, 104, 232, 18, 115, 110, 6, 139, 77, 124, 50, 97, 131, 176, 15, 110, 25, 185, 107, 6, 35, 206, 225, 22, 129, 85, 12, 185, 181, 177, 70, 0, 171, 178, 155, 196, 243, 177, 171, 57, 212, 36, 107 }
                        });
                });

            modelBuilder.Entity("api_sge.Entidades.Entrega", b =>
                {
                    b.HasOne("api_sge.Entidades.Mercadoria", "Mercadoria")
                        .WithMany("Entregas")
                        .HasForeignKey("MercadoriaCodigo");

                    b.Navigation("Mercadoria");
                });

            modelBuilder.Entity("api_sge.Entidades.Localizacao", b =>
                {
                    b.HasOne("api_sge.Entidades.Endereco", "Endereco")
                        .WithMany("Localizacoes")
                        .HasForeignKey("EnderecoCodigo");

                    b.HasOne("api_sge.Entidades.Entrega", null)
                        .WithMany("Localizacoes")
                        .HasForeignKey("EntregaCodigo");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("api_sge.Entidades.Endereco", b =>
                {
                    b.Navigation("Localizacoes");
                });

            modelBuilder.Entity("api_sge.Entidades.Entrega", b =>
                {
                    b.Navigation("Localizacoes");
                });

            modelBuilder.Entity("api_sge.Entidades.Mercadoria", b =>
                {
                    b.Navigation("Entregas");
                });
#pragma warning restore 612, 618
        }
    }
}
